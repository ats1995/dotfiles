#!/bin/bash
# Place in ~/bin/termux-url-opener to share from apps

if [ -z "$1" ]; then
    echo "No url specified"
    exit
fi
# This is a general-purpose function to ask Yes/No questions in Bash, either
# with or without a default answer. It keeps repeating the question until it
# gets a valid answer.

ask() {
    # https://djm.me/ask
    local prompt default reply

    if [ "${2:-}" = "V" ]; then
        prompt="V/a"
        default=V
    elif [ "${2:-}" = "A" ]; then
        prompt="v/A"
        default=A
    else
        prompt="v/a"
        default=
    fi

    while true; do

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read reply </dev/tty

        # Default?
        if [ -z "$reply" ]; then
            reply=$default
        fi

        # Check if the reply is valid
        case "$reply" in
            V*|v*) return 0 ;;
            A*|a*) return 1 ;;
        esac

    done
}

url=$1
if ask "Download video, or audio only?" V; then
    echo "Video"
    DlFormat='bestvideo[height<=1080]+bestaudio/best[height<=1080]'
else
    echo "Audio only"
    DlFormat='bestaudio/best[height<=1080]'
    AudioOnly='--extract-audio'
fi

youtube-dl --verbose \
    --format $DlFormat $AudioOnly \
    --write-all-thumbnails \
    --write-info-json \
    --embed-thumbnail \
    --embed-subs \
    --all-subs \
    --ignore-errors \
    --continue \
    --write-thumbnail \
    --output '%(uploader)s - %(upload_date)s - %(title)s - %(id)s.%(ext)s' \
    "$url"

# Send android notification when done
TITLE=$(youtube-dl --get-title $url)
termux-notification --title "YouTube-DL" --content "Completed: $TITLE"
